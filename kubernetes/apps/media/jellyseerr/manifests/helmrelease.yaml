---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyseerr
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  driftDetection:
    mode: enabled
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: volsync
      namespace: volsync-system

  values:
    controllers:
      jellyseerr:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/d4rkfella/postgres-init
              tag: 0.1.0@sha256:d11101e3d4a2a4bcfce21df1b8c42af51ad821c132e3df7ef5c57b2fb165798f
            env:
              POSTGRES_DBNAME: &dbName jellyseerr
              POSTGRES_HOST: &dbHost postgres-v17-rw.database.svc.cluster.local
              POSTGRES_SSLMODE: require
              POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: &secret jellyseerr-secret
                    key: &pgUser POSTGRES_USERNAME
              POSTGRES_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: &pgPass POSTGRES_PASSWORD
              POSTGRES_SUPER_USER: postgres-db-manager
              POSTGRES_SUPER_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: POSTGRES_SUPER_PASS
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

        containers:
          app:
            image:
              repository: ghcr.io/d4rkfella/jellyseerr
              tag: 2.7.1@sha256:8ae1bf744db90f363d64a298dc3bb1701097adfab51b4687c1f29ce7977f0cde
            env:
              TZ: Europe/Sofia
              LOG_LEVEL: "info"
              PORT: &port 80
              DB_TYPE: postgres
              DB_HOST: *dbHost
              DB_NAME: *dbName
              DB_USER:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: *pgUser
              DB_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: *pgPass
              DB_USE_SSL: "true"
              DB_SSL_CA_FILE: /etc/ssl/certs/postgres-ca.crt
              DB_LOG_QUERIES: "false"
              DB_SSL_REJECT_UNAUTHORIZED: "true"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v1/status
                    port: *port
                  initialDelaySeconds: 2
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext: *securityContext
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 2Gi

    defaultPodOptions:
      hostUsers: false
      hostAliases:
        - ip: "192.168.91.52"
          hostnames:
            - "radarr.darkfellanetwork.com"
            - "sonarr.darkfellanetwork.com"
        - ip: "192.168.91.75"
          hostnames:
            - "jellyfin.darkfellanetwork.com"
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    route:
      app:
        hostnames: ["requests.darkfellanetwork.com"]
        parentRefs:
          - name: external
            namespace: envoy-gateway-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        existingClaim: *app
        advancedMounts:
          jellyseerr:
            app:
              - path: /usr/lib/jellyseerr/config

      cache:
        suffix: cache
        type: persistentVolumeClaim
        size: 20Gi
        accessMode: ReadWriteOnce
        storageClass: openebs-zfs-128k
        advancedMounts:
          jellyseerr:
            app:
              - path: /usr/lib/jellyseerr/config/cache

      logs:
        type: emptyDir
        advancedMounts:
          jellyseerr:
            app:
              - path: /usr/lib/jellyseerr/config/logs

      next-cache:
        type: emptyDir
        advancedMounts:
          jellyseerr:
            app:
              - path: /usr/lib/jellyseerr/.next/cache

      postgres-ca:
        type: secret
        name: *secret
        advancedMounts:
          jellyseerr:
            app:
              - path: /etc/ssl/certs/postgres-ca.crt
                subPath: ca.crt
                readOnly: true
