---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app sonarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/d4rkfella/postgres-init
              tag: 0.1.0@sha256:11795769214505f9aee9314d0dc2086fb4f8f2dd16d08739e1734fd719884eda
            env:
              POSTGRES_DBNAME: &dbName sonarr
              POSTGRES_HOST: &dbHost postgres-v17-rw.database.svc.cluster.local
              POSTGRES_SSLMODE: require
              POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: &secret "{{ .Release.Name }}-secret"
                    key: &pgUser POSTGRES_USERNAME
              POSTGRES_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: &pgPass POSTGRES_PASSWORD
              POSTGRES_SUPER_USER: postgres
              POSTGRES_SUPER_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: POSTGRES_SUPER_PASS
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

        containers:
          app:
            image:
              repository: ghcr.io/d4rkfella/sonarr
              tag: 4.0.15@sha256:a65e8e022449dff9601125ac016323d50a1c4d5751d2335dc4288b5ac6d2863e
            env:
              TZ: Europe/Sofia
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 80
              SONARR__SERVER__BINDADDRESS: 0.0.0.0
              SONARR__AUTH__APIKEY:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: SONARR_API_KEY
              SONARR__POSTGRES__HOST: *dbHost
              SONARR__POSTGRES__MAINDB: *dbName
              SONARR__POSTGRES__USER:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: *pgUser
              SONARR__POSTGRES__PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: *pgPass
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 2
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext: *securityContext
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 4Gi

    defaultPodOptions:
      hostAliases:
        - ip: "192.168.91.52"
          hostnames:
            - "prowlarr.darkfellanetwork.com"
            - "qbittorrent.darkfellanetwork.com"
            - "autobrr.darkfellanetwork.com"
        - ip: "192.168.91.51"
          hostnames:
            - "accounts.darkfellanetwork.com"
        - ip: "192.168.91.54"
          hostnames:
            - "plex.darkfellanetwork.com"
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    route:
      app:
        hostnames: ["{{ .Release.Name }}.darkfellanetwork.com"]
        parentRefs:
          - name: internal
            namespace: envoy-gateway-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        suffix: config
        type: persistentVolumeClaim
        size: 15Gi
        storageClass: openebs-zfs-128k
        accessMode: ReadWriteOnce
        advancedMounts:
          sonarr:
            app:
              - path: /config
      tmp:
        type: emptyDir
        advancedMounts:
          sonarr:
            app:
              - path: /tmp
      media:
        type: nfs
        server: 192.168.91.40
        path: /mnt/exos20/data
        advancedMounts:
          sonarr:
            app:
              - path: /data
      secrets:
        type: secret
        name: *secret
        defaultMode: 0440
        advancedMounts:
          sonarr:
            oauth2-proxy:
              - path: /etc/oauth2-proxy.cfg
                subPath: oauth2-proxy.cfg
                readOnly: true
              - path: /etc/ssl/certs/Internal-Root-CA.crt
                subPath: ca.crt
                readOnly: true

    rawResources:
      envoy-security-policy:
        enabled: true
        apiVersion: gateway.envoyproxy.io/v1alpha1
        kind: SecurityPolicy
        spec:
          spec:
            targetRefs:
              - group: gateway.networking.k8s.io
                kind: HTTPRoute
                name: sonarr
            oidc:
              provider:
                issuer: "https://accounts.darkfellanetwork.com/realms/DarkfellaNET"
              clientID: "91541ad5-d34b-4dec-98f4-4b644882e02d"
              clientSecret:
                name: "sonarr-secret"
              redirectURL: "https://sonarr.darkfellanetwork.com/oauth2/callback"
              logoutPath: "/oauth2/sign_out"
              forwardAccessToken: false
              refreshToken: true
              passThroughAuthHeader: false
