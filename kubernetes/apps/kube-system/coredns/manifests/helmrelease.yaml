---
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: coredns
spec:
  interval: 1h
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  url: oci://ghcr.io/coredns/charts/coredns
  ref:
    tag: 1.43.2
  verify:
    provider: cosign
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: coredns
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: coredns
  driftDetection:
    mode: enabled
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  postRenderers:
  - kustomize:
      patches:
      - target:
          kind: Deployment
        patch: |-
          - op: add
            path: /spec/template/spec/hostUsers
            value: false
  values:
    fullnameOverride: coredns
    replicaCount: 2
    k8sAppLabelOverride: kube-dns
    serviceAccount:
      create: true
    service:
      name: kube-dns
      clusterIP: 172.17.0.10
    servers:
      - zones:
          - zone: .
            scheme: dns://
            use_tcp: true
        port: 53
        plugins:
          - name: errors
          - name: health
            configBlock: |-
              lameduck 5s
          - name: ready
          - name: log
            configBlock: |-
              class error
          - name: prometheus
            parameters: 0.0.0.0:9153
          - name: kubernetes
            parameters: cluster.local in-addr.arpa ip6.arpa
            configBlock: |-
              pods verified
              fallthrough in-addr.arpa ip6.arpa
          - name: autopath
            parameters: "@kubernetes"
          - name: forward
            parameters: darkfellanetwork.com 192.168.91.41
          - name: forward
            parameters: . 192.168.91.1
          - name: cache
            configBlock: |-
              prefetch 20
              serve_stale
          - name: loop
          - name: reload
          - name: loadbalance
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: node-role.kubernetes.io/control-plane
                  operator: Exists
    tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
    deployment:
      annotations:
        reloader.stakater.com/auto: "true"

    podSecurityContext:
      runAsNonRoot: true
      runAsUser: 65532
      runAsGroup: 65532
      fsGroup: 65532
      fsGroupChangePolicy: OnRootMismatch
      seccompProfile: { type: RuntimeDefault }

    securityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities: { drop: ["ALL"],add: ["NET_BIND_SERVICE"] }

