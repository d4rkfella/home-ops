feature:
  storageCapacity: true

rbac:
  pspEnabled: false

zfsNode:
  componentName: openebs-zfs-node
  driverRegistrar:
    name: "csi-node-driver-registrar"
    image:
      registry: registry.k8s.io/
      repository: sig-storage/csi-node-driver-registrar
      pullPolicy: IfNotPresent
      tag: v2.12.0
  updateStrategy:
    type: RollingUpdate
  annotations: {}
  podAnnotations: {}
  resources: {}
  kubeletDir: "/var/lib/kubelet/"
  encrKeysDir: "/var/openebs/keys"
  podLabels: {}
  nodeSelector: {}
  tolerations: []
  securityContext: {}
  labels: {}
  priorityClass:
    create: true
    name: zfs-csi-node-critical
  allowedTopologyKeys: "All"
  initContainers: {}
  additionalVolumes: {}

zfsController:
  componentName: openebs-zfs-controller
  initContainers: {}
  additionalVolumes: {}
  replicas: 1
  resizer:
    name: "csi-resizer"
    image:
      registry: registry.k8s.io/
      repository: sig-storage/csi-resizer
      pullPolicy: IfNotPresent
      tag: v1.12.0
    extraArgs: []
  snapshotter:
    name: "csi-snapshotter"
    image:
      registry: registry.k8s.io/
      repository: sig-storage/csi-snapshotter
      pullPolicy: IfNotPresent
      tag: v8.2.0
    extraArgs: []
  snapshotController:
    name: "snapshot-controller"
    image:
      registry: registry.k8s.io/
      repository: sig-storage/snapshot-controller
      pullPolicy: IfNotPresent
      tag: v8.2.0
    extraArgs: []
  provisioner:
    name: "csi-provisioner"
    image:
      registry: registry.k8s.io/
      repository: sig-storage/csi-provisioner
      pullPolicy: IfNotPresent
      tag: v5.1.0
    extraArgs: []
  updateStrategy:
    type: RollingUpdate
  annotations: {}
  podAnnotations: {}
  resources: {}
  podLabels:
    name: openebs-zfs-controller
  nodeSelector: {}
  tolerations: []
  securityContext: {}
  priorityClass:
    create: true
    name: zfs-csi-controller-critical

zfsPlugin:
  name: "openebs-zfs-plugin"
  image:
    registry:
    repository: openebs/zfs-driver
    pullPolicy: IfNotPresent
    tag: 2.7.0-develop

role: openebs-zfs

serviceAccount:
  zfsController:
    create: true
    name: openebs-zfs-controller-sa
  zfsNode:
    create: true
    name: openebs-zfs-node-sa

analytics:
  enabled: true
  installerType: "zfs-localpv-helm"
zfs:
  bin: zfs

crds:
  zfsLocalPv:
    enabled: true
  csi:
    volumeSnapshots:
      enabled: true

enableHelmMetaLabels: true
