---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          cert:
            image:
              repository: alpine/openssl
              tag: latest@sha256:dbc93b5afe2c6b486d56e351338dcc8f2ed53460c950443481f7534d8cf70d2f
            command:
              - "/bin/sh"
              - "-c"
              - |
                mkdir -p /ssl/certs && \
                openssl pkcs12 -export -out /ssl/certs/certificate.p12 -inkey /etc/secret/tls.key -in /etc/secret/tls.crt -passin pass: -passout pass: || exit 1
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.41.3.9314-a0bfb8370@sha256:cbefe5f2f44d0519fd72985ed4005b7b55a7eb9dcbdcc3b4d6bb7055730db565
            env:
              TZ: Europe/Sofia
              PLEX_ADVERTISE_URL: https://plex.darkfellanetwork.com:32400
              NVIDIA_VISIBLE_DEVICES: all
              NVIDIA_DRIVER_CAPABILITIES: all
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  exec:
                    command: ["/bin/sh", "-c", "curl -s http://localhost:32400/identity | grep -q 'MediaContainer'"]
                  initialDelaySeconds: 1
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext: *securityContext
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 3Gi
                nvidia.com/gpu: 1

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: plex
        type: LoadBalancer
        allocateLoadBalancerNodePorts: false
        annotations:
          external-dns.alpha.kubernetes.io/hostname: plex.darkfellanetwork.com
          lbipam.cilium.io/ips: 192.168.91.98
        ports:
          http:
            port: 32400

    persistence:
      config:
        type: persistentVolumeClaim
        size: 50Gi
        accessMode: ReadWriteOnce
        storageClass: openebs-zfs-1m
        advancedMounts:
          plex:
            app:
              - path: /config/Library/Application Support/Plex Media Server

      logs:
        type: emptyDir
        advancedMounts:
          plex:
            app:
              - path: /config/Library/Application Support/Plex Media Server/Logs

      tmp:
        type: emptyDir
        medium: Memory

      transcode:
        type: persistentVolumeClaim
        size: 150Gi
        storageClass: openebs-zfs-1m
        accessMode: ReadWriteOnce
        advancedMounts:
          plex:
            app:
              - path: /transcode

      media:
        type: nfs
        server: 192.168.91.40
        path: /mnt/exos20/data
        advancedMounts:
          plex:
            app:
              - path: /data/media
                subPath: media
                readOnly: true
      ssl:
        type: emptyDir
        advancedMounts:
          plex:
            app:
              - path: /ssl
                readOnly: true
            cert:
              - path: /ssl
      cert:
        type: secret
        name: plex-tls
        globalMounts:
          - path: /etc/secret
            readOnly: true
