---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: bazarr
spec:
  interval: 30m
  chart:
    spec:
      verify:
        provider: cosign
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      bazarr:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/buroa/postgres-init
              tag: 17.2@sha256:92f971d2d9ebe4b060b4bc44dfb13e0baaf68489184b742fae42cc83c7a78c0c
            env:
              INIT_POSTGRES_HOST: &dbHost postgres17-rw.database.svc.cluster.local
              INIT_POSTGRES_PORT: &dbPort 5432
              INIT_POSTGRES_DBNAME: &dbName bazarr
              INIT_POSTGRES_SUPER_PASS:
                valueFrom:
                  secretKeyRef:
                    name: &secret bazarr-secret
                    key: POSTGRES_SUPER_PASS
              INIT_POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: POSTGRES_USER
              INIT_POSTGRES_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: POSTGRES_PASS
            securityContext: &securityContext
              runAsUser: 65534
              runAsGroup: 65534
              privileged: false
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

        containers:
          oauth2-proxy:
            image:
              repository: quay.io/oauth2-proxy/oauth2-proxy
              tag: v7.7.1-amd64@sha256:95f2002754cb0f1c1553aed56f4d6564a5b860e01baccb4e1b8311ffa25c167c
            args:
              - --config=/etc/oauth2-proxy.cfg
            env:
              OAUTH2_PROXY_CLIENT_ID:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: CLIENT_ID
              OAUTH2_PROXY_CLIENT_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: CLIENT_SECRET
              OAUTH2_PROXY_COOKIE_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: COOKIE_SECRET
              OAUTH2_PROXY_REDIS_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: DRAGONFLY_PASSWORD
            securityContext: *securityContext

          app:
            image:
              repository: ghcr.io/onedr0p/bazarr
              tag: 1.5.1@sha256:6e469bc2db7d3a462158687684da2533fb87c40be6a00504e7dfbe9342bc7266
            env:
              TZ: Europe/Sofia
              POSTGRES_ENABLED: "true"
              POSTGRES_HOST: *dbHost
              POSTGRES_PORT: *dbPort
              POSTGRES_DATABASE: *dbName
              POSTGRES_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: POSTGRES_USER
              POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: POSTGRES_PASS
              PLEX_TOKEN:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: PLEX_TOKEN
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 6767
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext: &securityContext2
              privileged: false
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi

          subcleaner:
            image:
              repository: registry.k8s.io/git-sync/git-sync
              tag: v4.4.0@sha256:0330739a707a2969d617e859f096659ab6d149212658ac0ad7e550b59482ebf0
            env:
              GITSYNC_REPO: https://github.com/KBlixt/subcleaner
              GITSYNC_REF: master
              GITSYNC_PERIOD: 24h
              GITSYNC_ROOT: /add-ons
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 128Mi
            securityContext: *securityContext2

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: bazarr
        ports:
          http:
            port: 4180

    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.darkfellanetwork.com
          cert-manager.io/cluster-issuer: zerossl-prod
          cert-manager.io/private-key-rotation-policy: Always
          cert-manager.io/private-key-algorithm: ECDSA
          cert-manager.io/private-key-size: "384"
        className: internal
        hosts:
          - host: &host "{{ .Release.Name }}.darkfellanetwork.com"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: bazarr-tls

    persistence:
      add-ons:
        type: emptyDir
        advancedMounts:
          bazarr:
            app:
              - path: /add-ons
            subcleaner:
              - path: /add-ons

      config:
        enabled: true
        type: persistentVolumeClaim
        size: 5Gi
        accessMode: ReadWriteOnce
        storageClass: openebs-zfs-128k
        advancedMounts:
          bazarr:
            app:
              - path: /config

      log:
        type: emptyDir
        advancedMounts:
          bazarr:
            app:
              - path: /config/log

      cache:
        type: emptyDir
        advancedMounts:
          bazarr:
            app:
              - path: /config/cache

      media:
        type: nfs
        server: 192.168.91.40
        path: /mnt/exos20/data
        advancedMounts:
          bazarr:
            app:
              - path: /data/media
                subPath: media

      scripts:
        type: configMap
        name: bazarr-scripts
        defaultMode: 0775
        advancedMounts:
          bazarr:
            app:
              - path: /scripts
                readOnly: true

      tmp:
        type: emptyDir
        advancedMounts:
          bazarr:
            subcleaner:
              - path: /tmp

      oauth2-proxy-config:
        type: configMap
        name: bazarr-oauth2-proxy-config
        advancedMounts:
          bazarr:
            oauth2-proxy:
              - path: /etc/oauth2-proxy.cfg
                subPath: oauth2-proxy.cfg
                readOnly: true

      dragonfly-ca-cert:
        type: secret
        name: *secret
        advancedMounts:
          bazarr:
            oauth2-proxy:
              - path: /etc/ssl/certs/dragonfly-ca.crt
                subPath: dragonfly-ca.crt
                readOnly: true

    rawResources:
      secret:
        enabled: true
        apiVersion: external-secrets.io/v1beta1
        kind: ExternalSecret
        spec:
          spec:
            secretStoreRef:
              kind: ClusterSecretStore
              name: vault-backend
            target:
              name: *secret
              template:
                engineVersion: v2
                data:
                  PLEX_TOKEN: '{{ "{{ .PLEX_TOKEN }}" }}'
                  POSTGRES_USER: '{{ "{{ .BAZARR_POSTGRES_USER }}" }}'
                  POSTGRES_PASS: '{{ "{{ .BAZARR_POSTGRES_PASS }}" }}'
                  POSTGRES_SUPER_PASS: '{{ "{{ .POSTGRES_SUPER_PASS }}" }}'
                  COOKIE_SECRET: '{{ "{{ .COOKIE_SECRET }}" }}'
                  CLIENT_SECRET: '{{ "{{ .CLIENT_SECRET}}" }}'
                  CLIENT_ID: '{{ "{{ .CLIENT_ID }}" }}'
                  DRAGONFLY_PASSWORD: '{{ "{{ .DRAGONFLY__PASSWORD }}" }}'
                  dragonfly-ca.crt: '{{ "{{ .ca.crt }}" }}'
            dataFrom:
              - extract:
                  key: secrets/plex
              - extract:
                  key: secrets/cloudnative-pg
              - extract:
                  key: secrets/api-keys
              - extract:
                  key: secrets/oauth2/bazarr
              - extract:
                  key: secrets/dragonfly
              - extract:
                  key: secrets/certificates/dragonfly
