---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app bazarr
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  driftDetection:
    mode: enabled
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      bazarr:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/d4rkfella/postgres-init
              tag: 1.0.0@sha256:ffb4e3ad297b50928ad9f51b7440d08781b89ec2c0a2ef5e9f6b0fa197224d03
            env:
              INIT_POSTGRES_HOST: &dbHost postgres-v17-rw.database.svc.cluster.local
              INIT_POSTGRES_PORT: &dbPort 5432
              INIT_POSTGRES_SSLMODE: require
              INIT_POSTGRES_DBNAME: &dbName bazarr
              INIT_POSTGRES_SUPER_USER: postgres-db-manager
              INIT_POSTGRES_SUPER_PASS:
                valueFrom:
                  secretKeyRef:
                    name: &secret "{{ .Release.Name }}-secret"
                    key: POSTGRES_SUPER_PASS
              INIT_POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: &pgUser POSTGRES_USERNAME
              INIT_POSTGRES_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: &pgPass POSTGRES_PASSWORD
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

        containers:
          app:
            image:
              repository: ghcr.io/d4rkfella/bazarr-distroless
              tag: 1.5.2@sha256:11273da5803903e92215aad11377de6ef6343ce60e363128145e01c3a5f64c98
            env:
              TZ: Europe/Sofia
              POSTGRES_ENABLED: "true"
              POSTGRES_HOST: *dbHost
              POSTGRES_PORT: *dbPort
              POSTGRES_DATABASE: *dbName
              POSTGRES_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: *pgUser
              POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: *pgPass
            probes:
              liveness: &probes
                enabled: false
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: 6767
                  initialDelaySeconds: 2
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext: *securityContext
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 1Gi

    defaultPodOptions:
      hostAliases:
        - ip: "192.168.91.52"
          hostnames:
            - "radarr.darkfellanetwork.com"
            - "sonarr.darkfellanetwork.com"
        - ip: "192.168.91.54"
          hostnames:
            - "plex.darkfellanetwork.com"
        - ip: "192.168.91.51"
          hostnames:
            - "accounts.darkfellanetwork.com"
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        fsGroupChangePolicy: Always
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: bazarr
        ports:
          http:
            port: &port 6767

    route:
      app:
        hostnames: ["{{ .Release.Name }}.darkfellanetwork.com"]
        parentRefs:
          - name: internal
            namespace: envoy-gateway-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        existingClaim: *app
        advancedMounts:
          bazarr:
            app:
              - path: /config

      log:
        type: emptyDir
        advancedMounts:
          bazarr:
            app:
              - path: /config/log

      cache:
        type: emptyDir
        advancedMounts:
          bazarr:
            app:
              - path: /config/cache

      tmp:
        type: emptyDir
        advancedMounts:
          bazarr:
            app:
              - path: /tmp

      media:
        type: nfs
        server: 192.168.91.40
        path: /mnt/exos20/data/media
        advancedMounts:
          bazarr:
            app:
              - path: /data/media
