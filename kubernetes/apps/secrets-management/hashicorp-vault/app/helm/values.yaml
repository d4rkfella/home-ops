global:
  enabled: true
  tlsDisable: false
  serverTelemetry:
    prometheusOperator: false

injector:
  enabled: true
csi:
  enabled: false

server:
  enabled: true
  image:
    repository: "hashicorp/vault"
    tag: "1.19.1"
    pullPolicy: IfNotPresent

  updateStrategyType: "OnDelete"

  logLevel: "info"
  logFormat: "json"

  resources: {}

  authDelegator:
    enabled: true

  readinessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
  livenessProbe:
    enabled: true
    path: "/v1/sys/health?standbyok=true"
    initialDelaySeconds: 60

  terminationGracePeriodSeconds: 10

  preStopSleepSeconds: 5

  extraSecretEnvironmentVars:
    - envName: AWS_ACCESS_KEY_ID
      secretName: vault-eks-secret
      secretKey: AWS_ACCESS_KEY_ID
    - envName: AWS_SECRET_ACCESS_KEY
      secretName: vault-eks-secret
      secretKey: AWS_SECRET_ACCESS_KEY

  volumes:
    - name: vault-tls
      secret:
        defaultMode: 288
        secretName: vault-tls

  volumeMounts:
    - mountPath: /vault/userconfig/tls-server
      name: vault-tls
      readOnly: true

  affinity: |
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          topologyKey: kubernetes.io/hostname
          labelSelector:
            matchLabels:
              app: {{ template "vault.fullname" . }}
              release: {{ .Release.Name }}

  includeConfigAnnotation: true

  service:
    enabled: true
    active:
      enabled: true
    standby:
      enabled: true
    instanceSelector:
      enabled: true
    publishNotReadyAddresses: false
    port: 8200
    targetPort: 8200
  dataStorage:
    enabled: true
    size: 20Gi
    mountPath: "/vault/data"
    accessMode: ReadWriteOnce
    storageClass: openebs-zfs-128k

  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain

  auditStorage:
    enabled: true
    size: 10Gi
    mountPath: "/vault/audit"
    accessMode: ReadWriteOnce
    storageClass: openebs-zfs-128k

  standalone:
    enabled: false

  ha:
    enabled: true
    replicas: 3

    apiAddr: "https://vault.darkfellanetwork.com:8200"

    raft:
      enabled: true
      setNodeId: true
      config: |
        ui = true
        api_addr = "https://vault.darkfellanetwork.com:8200"

        seal "awskms" {
          region = "us-east-1"
          kms_key_id = "arn:aws:kms:us-east-1:905418366675:key/6e4bfe89-d22a-41d7-8705-2729d0f3b099"
        }

        listener "tcp" {
          tls_disable = 0
          address = "0.0.0.0:8200"
          cluster_address = "0.0.0.0:8201"
          tls_cert_file = "/vault/userconfig/tls-server/tls.crt"
          tls_key_file = "/vault/userconfig/tls-server/tls.key"
          tls_min_version = "tls13"
        }
        storage "raft" {
          path = "/vault/data"
          retry_join {
            leader_api_addr = "https://vault-0.vault-internal:8200"
            leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
            leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
            leader_tls_servername = "vault.darkfellanetwork.com"
          }
          retry_join {
            leader_api_addr = "https://vault-1.vault-internal:8200"
            leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
            leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
            leader_tls_servername = "vault.darkfellanetwork.com"
          }
          retry_join {
            leader_api_addr = "https://vault-2.vault-internal:8200"
            leader_client_cert_file = "/vault/userconfig/tls-server/tls.crt"
            leader_client_key_file = "/vault/userconfig/tls-server/tls.key"
            leader_tls_servername = "vault.darkfellanetwork.com"
          }
        }

        telemetry {
          prometheus_retention_time = "24h"
          disable_hostname = true
        }

        service_registration "kubernetes" {}

    disruptionBudget:
      enabled: true
      maxUnavailable: 1

  serviceAccount:
    create: true
    name: ""
    createSecret: false
    serviceDiscovery:
      enabled: true

  statefulSet:
    annotations:
      reloader.stakater.com/auto: "true"
    securityContext:
      pod:
        runAsNonRoot: true
        runAsUser: 100
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: Always
        seccompProfile: { type: RuntimeDefault }
      container:
        allowPrivilegeEscalation: false
        capabilities: { drop: ["ALL"] }

  hostNetwork: false

ui:
  enabled: true
  publishNotReadyAddresses: false
  activeVaultPodOnly: true
  serviceType: "LoadBalancer"
  externalPort: 8200
  externalTrafficPolicy: Local
  serviceNodePort: 0
  annotations:
    external-dns.alpha.kubernetes.io/hostname: vault.darkfellanetwork.com
    lbipam.cilium.io/ips: 192.168.91.53

serverTelemetry:
  prometheusRules:
      enabled: true
      selectors: {}
      rules:
        - alert: VaultHighResponseTime
          annotations:
            message: The response time of Vault is over 500ms on average over the last 5 minutes.
          expr: vault_core_handle_request{quantile="0.5", namespace="mynamespace"} > 500
          for: 5m
          labels:
            severity: warning
        - alert: VaultHighResponseTime
          annotations:
            message: The response time of Vault is over 1s on average over the last 5 minutes.
          expr: vault_core_handle_request{quantile="0.5", namespace="mynamespace"} > 1000
          for: 5m
          labels:
            severity: critical
        - alert: VaultAutopilotNodeHealthy
          expr: vault_autopilot_healthy < 1
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: Autopilot Vault Raft node unhealthy
            description: At least one of the Autopilot Vault Raft nodes is unhealthy
        - alert: VaultLeadershipLoss
          expr: sum(increase(vault_core_leadership_lost_count{job="vault-monitoring"}[1h])) > 5
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: High frequency of Vault leadership losses
            description: There have been more than 5 Vault leadership losses in the past 1h
        - alert: VaultLeadershipStepDowns
          expr: sum(increase(vault_core_step_down_count{job="vault-monitoring"}[1h])) > 5
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: High frequency of Vault leadership step downs
            description: There have been more than 5 Vault leadership step downs in the past 1h
        - alert: VaultLeadershipSetupFailures
          expr: sum(increase(vault_core_leadership_setup_failed{job="vault-monitoring"}[1h])) > 5
          for: 1m
          labels:
            severity: critical
          annotations:
            summary: High frequency of Vault leadership setup failures
            description: There have been more than 5 Vault leadership setup failures in the past 1h
        - alert: VaultRequestFailures
          expr: increase(vault_audit_log_request_failure[5m]) > 0
          for: 15m
          labels:
            severity: critical
          annotations:
            summary: High frequency of failed Vault requests
            description: There has been an increased number of failed Vault requests in the last 15 minutes
        - alert: VaultResponseFailures
          expr: increase(vault_audit_log_response_failure[5m]) > 0
          for: 15m
          labels:
            severity: critical
          annotations:
            summary: High frequency of failed Vault responses
            description: There has been an increased number of failed Vault responses in the last 15 minutes
        - alert: VaultTokenCreate
          expr: increase(vault_token_create_count[5m]) > 100
          for: 15m
          labels:
            severity: critical
          annotations:
            summary: High frequency of created Vault token
            description: There has been an increased number of Vault token creation in the last 15 minutes
        - alert: VaultTokenStore
          expr: increase(vault_token_store_count[5m]) > 100
          for: 15m
          labels:
            severity: critical
          annotations:
            summary: High frequency of stored Vault token
            description: There has been an increased number of Vault token storing in the last 15 minutes
        - alert: VaultLowFailureTolerance
          expr: vault_autopilot_failure_tolerance == 0
          for: 5m
          labels:
            severity: critical
          annotations:
            summary: Vault Raft Cluster Failure Tolerance Critical
            description: Vault Raft cluster has a failure tolerance of 0
