---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app vaultwarden
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  driftDetection:
    mode: enabled
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      vaultwarden:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/d4rkfella/postgres-init
              tag: 0.1.0@sha256:d11101e3d4a2a4bcfce21df1b8c42af51ad821c132e3df7ef5c57b2fb165798f
            env:
              POSTGRES_DBNAME: vaultwarden
              POSTGRES_HOST: postgres-v17-rw.database.svc.cluster.local
              POSTGRES_SSLMODE: require
              POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: &secret vaultwarden-secret
                    key: POSTGRES_USERNAME
              POSTGRES_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: POSTGRES_PASSWORD
              POSTGRES_SUPER_USER: postgres-db-manager
              POSTGRES_SUPER_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: POSTGRES_SUPER_PASS
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

          oauth2-proxy:
            image:
              repository: quay.io/oauth2-proxy/oauth2-proxy
              tag: v7.10.0@sha256:2f1471fc735d50dfb0041aeae12967bae42a8387ce1660f0a76b175e3f9c195c
            args:
              - --config=/etc/oauth2-proxy.cfg
            env:
              OAUTH2_PROXY_REDIS_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: DRAGONFLY_PASSWORD
            probes:
              liveness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /oauth2/ping
                    port: &port 4180
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /oauth2/ready
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
            securityContext: *securityContext
            restartPolicy: Always

        containers:
          app:
            image:
              repository: vaultwarden/server
              tag: 1.34.1@sha256:48267ea14d8649b2e553a5fe290c40b5dd94d54e9a24b26ae7134a75a659695f
            env:
              EMAIL_2FA_ENFORCE_ON_VERIFIED_INVITE: true
              EMAIL_2FA_AUTO_FALLBACK: true
              AUTHENTICATOR_DISABLE_TIME_DRIFT: true
              REQUIRE_DEVICE_EMAIL: true
              DISABLE_ADMIN_TOKEN: true
              DATA_FOLDER: data
              ICON_CACHE_FOLDER: data/icon_cache
              ATTACHMENTS_FOLDER: data/attachments
              DOMAIN: https://vaultwarden.darkfellanetwork.com
              TZ: "Europe/Sofia"
              EMAIL_CHANGE_ALLOWED: false
              SIGNUPS_ALLOWED: false
              SIGNUPS_VERIFY: true
              SIGNUPS_DOMAINS_WHITELIST: darkfellanetwork.com
              ROCKET_ADDRESS: 127.0.0.1
              SMTP_AUTH_MECHANISM: Login
              SMTP_HOST: smtp-relay.brevo.com
              SMTP_FROM: noreply@darkfellanetwork.com
              SMTP_FROM_NAME: vaultwarden
              SMTP_PORT: 587
              SMTP_SECURITY: starttls
              SMTP_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: SMTP_USERNAME
              SMTP_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: SMTP_PASSWORD
              DATABASE_URL:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: DATABASE_URL
              PUSH_ENABLED: true
              PUSH_INSTALLATION_ID:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: PUSH_INSTALLATION_ID
              PUSH_INSTALLATION_KEY:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: PUSH_INSTALLATION_KEY
              PUSH_RELAY_URI: https://api.bitwarden.eu
              PUSH_IDENTITY_URI: https://identity.bitwarden.eu
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /alive
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext: *securityContext
            resources:
              requests:
                cpu: 100m
                memory: 100Mi
              limits:
                memory: 2Gi

    defaultPodOptions:
      hostUsers: false
      hostAliases:
        - ip: "192.168.91.51"
          hostnames:
            - "accounts.darkfellanetwork.com"
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    route:
      app:
        hostnames: ["{{ .Release.Name }}.darkfellanetwork.com"]
        parentRefs:
          - name: external
            namespace: envoy-gateway-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      data:
        suffix: data
        type: persistentVolumeClaim
        size: 15Gi
        accessMode: ReadWriteOnce
        storageClass: openebs-zfs-128k
        advancedMounts:
          vaultwarden:
            app:
              - path: /data

      secrets:
        type: secret
        name: *secret
        advancedMounts:
          vaultwarden:
            oauth2-proxy:
              - path: /etc/oauth2-proxy.cfg
                subPath: oauth2-proxy.cfg
                readOnly: true
              - path: /etc/ssl/certs/Internal-Root-CA.crt
                subPath: ca.crt
                readOnly: true
            app:
              - path: /etc/ssl/certs/postgres-ca.crt
                subPath: postgres-ca.crt
                readOnly: true
