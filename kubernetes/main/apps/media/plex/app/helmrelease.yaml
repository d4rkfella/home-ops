---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: plex
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3

  values:
    controllers:
      plex:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          cert:
            image:
              repository: alpine/openssl
              tag: latest@sha256:f9d029454db886212f12c3aae905934dd791b362b32ad191ddd9ac7fd3747c9e
            command:
              - "/bin/sh"
              - "-c"
              - |
                mkdir -p /ssl/certs && \
                openssl pkcs12 -export -out /ssl/certs/certificate.p12 -inkey /etc/secret/tls.key -in /etc/secret/tls.crt -passin pass: -passout pass: || exit 1
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/plex
              tag: 1.41.3.9314-a0bfb8370@sha256:cbefe5f2f44d0519fd72985ed4005b7b55a7eb9dcbdcc3b4d6bb7055730db565
            env:
              TZ: Europe/Sofia
              PLEX_ADVERTISE_URL: https://plex.darkfellanetwork.com:32400
              NVIDIA_VISIBLE_DEVICES: all
              NVIDIA_DRIVER_CAPABILITIES: all
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    scheme: HTTPS
                    path: /identity
                    port: 32400
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext: *securityContext
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 3Gi
                nvidia.com/gpu: 1

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: plex
        type: LoadBalancer
        allocateLoadBalancerNodePorts: false
        annotations:
          external-dns.alpha.kubernetes.io/hostname: plex.darkfellanetwork.com
          lbipam.cilium.io/ips: 192.168.91.98
        ports:
          http:
            port: 32400

    persistence:
      config:
        type: persistentVolumeClaim
        size: 50Gi
        accessMode: ReadWriteOnce
        storageClass: openebs-zfs-1m
        advancedMounts:
          plex:
            app:
              - path: /config/Library/Application Support/Plex Media Server

      logs:
        type: emptyDir
        advancedMounts:
          plex:
            app:
              - path: /config/Library/Application Support/Plex Media Server/Logs

      tmp:
        type: emptyDir
        medium: Memory

      transcode:
        type: persistentVolumeClaim
        size: 150Gi
        storageClass: openebs-zfs-1m
        accessMode: ReadWriteOnce
        advancedMounts:
          plex:
            app:
              - path: /transcode

      media:
        type: nfs
        server: 192.168.91.40
        path: /mnt/exos20/data
        advancedMounts:
          plex:
            app:
              - path: /data/media
                subPath: media
                readOnly: true
      ssl:
        type: emptyDir
        advancedMounts:
          plex:
            app:
              - path: /ssl
                readOnly: true
            cert:
              - path: /ssl
      cert:
        type: secret
        name: plex-tls
        globalMounts:
          - path: /etc/secret
            readOnly: true

    rawResources:
      secret:
        enabled: true
        apiVersion: external-secrets.io/v1beta1
        kind: ExternalSecret
        spec:
          spec:
            secretStoreRef:
              kind: ClusterSecretStore
              name: vault-backend
            target:
              name: &secret "{{ .Release.Name }}-secret"
              template:
                engineVersion: v2
                data:
                  PKCS12_PASSWORD: '{{ "{{ .PKCS12_PASSWORD }}" }}'
            dataFrom:
              - extract:
                  key: secrets/plex

      tls:
        enabled: true
        apiVersion: cert-manager.io/v1
        kind: Certificate
        spec:
          spec:
            dnsNames:
              - plex.darkfellanetwork.com
            issuerRef:
              group: cert-manager.io
              kind: ClusterIssuer
              name: zerossl-prod
            privateKey:
              algorithm: ECDSA
              rotationPolicy: Always
              size: 384
            secretName: plex-tls
            usages:
              - server auth
            keystores:
              pkcs12:
                create: true
                passwordSecretRef:
                  name: *secret
                  key: PKCS12_PASSWORD

    configMaps:
      gatus-ep:
        enabled: true
        labels:
          gatus.io/enabled: "true"
        data:
          config.yaml: |
            endpoints:
              - name: "Plex Media Server"
                group: external
                url: "https://plex.darkfellanetwork.com:32400/identity"
                interval: 1m
                client:
                  dns-resolver: tcp://172.17.0.10:53
                conditions:
                  - "[STATUS] == 200"
                  - "[BODY].MediaContainer.claimed == true"
                alerts:
                  - type: pushover
                headers:
                  Accept: "application/json"
      loki-rules:
        enabled: true
        labels:
          loki_rule: "true"
        data:
          plex.yaml: |
            groups:
              - name: plex
                rules:
                  - alert: PlexDatabaseBusy
                    expr: |
                      sum by (app) (count_over_time({app="plex"} |~ "(?i)retry busy DB"[2m])) > 0
                    for: 2m
                    labels:
                      severity: critical
                      category: logs
                    annotations:
                      app: "{{ "{{ $labels.app }}" }}"
                      summary: "{{ "{{ $labels.app }} is experiencing database issues" }}"
