location /api {
    access_by_lua_block {
        -- Retrieve the session
        local session = require "resty.session".open()

        -- Debug: Log the session ID and data
        ngx.log(ngx.ERR, "Session ID: ", session.id or "nil")
        ngx.log(ngx.ERR, "Session data: ", require("cjson").encode(session.data or {}))

        -- Retrieve the access token from the session
        local access_token = session.data.access_token

        if access_token then
            -- Debug: Log the access token
            ngx.log(ngx.ERR, "Access token found: ", access_token)

            -- Set the Authorization header with the access token
            ngx.req.set_header("Authorization", "Bearer " .. access_token)
        else
            -- Debug: Log that no access token was found
            ngx.log(ngx.ERR, "No access token found in session")

            -- If no access token is found, deny the request
            ngx.status = ngx.HTTP_UNAUTHORIZED
            ngx.say("Unauthorized: No access token found")
            ngx.exit(ngx.HTTP_UNAUTHORIZED)
        end
    }

    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Authorization $http_authorization;  # Explicitly forward the Authorization header
    proxy_pass_request_body on;
    proxy_pass_request_headers on;
    client_max_body_size 5g;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    proxy_pass https://prometheus-operated.observability.svc.cluster.local:8082;
}
