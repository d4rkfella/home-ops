---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: cross-seed
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
spec:
  interval: 30m
  chart:
    spec:
      verify:
        provider: cosign
      chart: app-template
      version: 3.6.1
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  dependsOn:
    - name: qbittorrent
      namespace: media
  values:
    controllers:
      cross-seed:
        annotations:
          secret.reloader.stakater.com/reload: "{{ .Release.Name }}-secret"

        containers:
          app:
            image:
              repository: ghcr.io/cross-seed/cross-seed
              tag: 6.9.1@sha256:575f491204d4ae7e003a98c5e15959c01b0c647e8bbeb75c3de9b9a9a92f3d1b
            args: ["daemon", "-v"]
            env:
              TZ: Europe/Sofia
              CROSS_SEED_PORT: &port 2468
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
        runAsGroup: 2000
        fsGroup: 2000
        fsGroupChangePolicy: Always
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: "{{ .Release.Name }}"
        ports:
          http:
            port: *port

    ingress:
      app:
        annotations:
          cert-manager.io/cluster-issuer: zerossl-prod
          cert-manager.io/private-key-rotation-policy: Always
          cert-manager.io/private-key-algorithm: ECDSA
          cert-manager.io/private-key-size: "384"
        className: internal
        tls:
          - hosts:
              - &host "{{ .Release.Name }}.darkfellanetwork.com"
            secretName: "{{ .Release.Name }}-tls"
        hosts:
          - host: *host
            paths:
              - path: /api
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        type: emptyDir
        medium: Memory

      config-file:
        type: configMap
        name: "{{ .Release.Name }}-config"
        defaultMode: 0440
        globalMounts:
          - path: /config/config.js
            subPath: config.js
            readOnly: true

      media:
        type: nfs
        server: 192.168.91.40
        path: /mnt/exos20/data
        globalMounts:
          - path: /data/downloads/torrents
            subPath: downloads/torrents

    rawResources:
      secret:
        enabled: true
        apiVersion: external-secrets.io/v1beta1
        kind: ExternalSecret
        spec:
          spec:
            secretStoreRef:
              kind: ClusterSecretStore
              name: vault-backend
            target:
              name: "{{ .Release.Name }}-secret"
              template:
                templateFrom:
                  - configMap:
                      name: "{{ .Release.Name }}-configmap"
                      items:
                        - key: config.js
            dataFrom:
              - extract:
                  key: secrets/qbittorrent
              - extract:
                  key: secrets/prowlarr
              - extract:
                  key: secrets/radarr
              - extract:
                  key: secrets/sonarr
              - extract:
                  key: secrets/cross-seed

    configMaps:
      loki-rules:
        enabled: true
        labels:
          loki_rule: "true"
        data:
          cross-seed.yaml: |
            groups:
              - name: cross-seed
                rules:
                  - alert: CrossSeedDatabaseMalformed
                    expr: |
                      sum by (app) (count_over_time({app="cross-seed"} |~ "(?i)database disk image is malformed"[1h])) > 0
                    for: 2m
                    labels:
                      severity: critical
                      category: logs
                    annotations:
                      app: "{{ "{{ $labels.container }}" }}"
                      summary: "{{ "{{ $labels.container }} is experiencing database issues" }}"
                  - alert: CrossSeedFailedToInject
                    expr: |
                      sum by (app) (count_over_time({app="cross-seed"} |~ "(?i)failed to inject"[1h])) > 0
                    for: 2m
                    labels:
                      severity: critical
                      category: logs
                    annotations:
                      app: "{{ "{{ $labels.container }}" }}"
                      summary: "{{ "{{ $labels.container }} failed to inject a torrent" }}"
