---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app keycloak-operator
spec:
  interval: 30m
  chart:
    spec:
      verify:
        provider: cosign
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: false
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  uninstall:
    keepHistory: false
  values:
    global:
      propagateGlobalMetadataToPods: true
    serviceAccount:
      create: true
      name: *app
    controllers:
      keycloak-operator:
        annotations:
          app.quarkus.io/quarkus-version: 3.15.1
          app.quarkus.io/vcs-uri: https://github.com/keycloak/keycloak.git
          app.quarkus.io/build-timestamp: 2025-01-13 - 16:13:33 +0000
        labels:
          app.kubernetes.io/managed-by: quarkus
          app.kubernetes.io/version: 26.0.8
          app.kubernetes.io/name: keycloak-operator
        containers:
          keycloak-operator:
            image:
              repository: quay.io/keycloak/keycloak-operator
              tag: 26.1.0
              pullPolicy: Always
            ports:
              - containerPort: 8080
                name: http
                protocol: TCP
            env:
              KUBERNETES_NAMESPACE:
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              RELATED_IMAGE_KEYCLOAK: quay.io/keycloak/keycloak:26.0.8
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /q/health/live
                    port: 8080
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 10
                  failureThreshold: 3
              readiness:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /q/health/ready
                    port: 8080
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 10
                  failureThreshold: 3
              startup:
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /q/health/started
                    port: 8080
                  initialDelaySeconds: 5
                  periodSeconds: 10
                  successThreshold: 1
                  timeoutSeconds: 10
                  failureThreshold: 3
            resources:
              limits:
                cpu: 700m
                memory: 2Gi
              requests:
                cpu: 300m
                memory: 450Mi

    service:
      keycloak-operator:
        controller: keycloak-operator
        ports:
          http:
            port: 80
            targetPort: 8080

    rbac:
      roles:
        realmimportcontroller-cluster-role:
          enabled: true
          type: ClusterRole
          rules:
            - apiGroups:
                - k8s.keycloak.org
              resources:
                - keycloakrealmimports
                - keycloakrealmimports/status
                - keycloakrealmimports/finalizers
              verbs:
                - get
                - list
                - watch
                - patch
                - update
                - create
                - delete
            - apiGroups:
                - ""
              resources:
                - secrets
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
        keycloakcontroller-cluster-role:
          enabled: true
          type: ClusterRole
          rules:
            - apiGroups:
                - k8s.keycloak.org
              resources:
                - keycloaks
                - keycloaks/status
                - keycloaks/finalizers
              verbs:
                - get
                - list
                - watch
                - patch
                - update
                - create
                - delete
            - apiGroups:
                - ""
              resources:
                - services
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - networking.k8s.io
              resources:
                - ingresses
              verbs:
                - create
                - delete
                - get
                - list
                - patch
                - update
                - watch
            - apiGroups:
                - ""
              resources:
                - secrets
              verbs:
                - create
                - delete
                - get
                - list
                - watch
        keycloak-operator-role:
          enabled: true
          type: Role
