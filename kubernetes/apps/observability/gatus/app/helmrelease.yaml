---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gatus
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      gatus:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/d4rkfella/postgres-init
              tag: 1.0.0@sha256:37311518017741400575975dfe323b95d9bbb70a7092b5a8e4de1964772af63a
            env:
              INIT_POSTGRES_HOST: &dbHost postgres-v17-rw.database.svc.cluster.local
              INIT_POSTGRES_PORT: &dbPort 5432
              INIT_POSTGRES_SSLMODE: require
              INIT_POSTGRES_DBNAME: &dbName gatus
              INIT_POSTGRES_SUPER_USER: postgres-db-manager
              INIT_POSTGRES_SUPER_PASS:
                valueFrom:
                  secretKeyRef:
                    name: &secret gatus-secret
                    key: POSTGRES_SUPER_PASS
              INIT_POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: &pgUser POSTGRES_USERNAME
              INIT_POSTGRES_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: &pgPass POSTGRES_PASSWORD
            securityContext: &securityContext
              privileged: false
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
          init-config:
            dependsOn: init-db
            image:
              repository: ghcr.io/kiwigrid/k8s-sidecar
              tag: 1.30.3@sha256:49dcce269568b1645b0050f296da787c99119647965229919a136614123f0627
            env:
              FOLDER: /config
              LABEL: gatus.io/enabled
              NAMESPACE: ALL
              RESOURCE: both
              UNIQUE_FILENAMES: true
              METHOD: WATCH
            restartPolicy: Always
            resources: &resources
              requests:
                cpu: 20m
              limits:
                memory: 256Mi
            securityContext: *securityContext

        containers:
          app:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.17.0@sha256:a8c53f9e9f1a3876cd00e44a42c80fc984e118d5ba0bdbaf08980cb627d61512
            env:
              TZ: Europe/Sofia
              GATUS_CONFIG_PATH: /config
              GATUS_DELAY_START_SECONDS: 5
              WEB_PORT: &port 80
              POSTGRES_HOST: *dbHost
              POSTGRES_PORT: *dbPort
              POSTGRES_DBNAME: *dbName
              POSTGRES_USERNAME:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: *pgUser
              POSTGRES_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: *pgPass
              PUSHOVER_TOKEN:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: PUSHOVER_TOKEN
              PUSHOVER_USER_KEY:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: PUSHOVER_USER_KEY
              OIDC_CLIENT_SECRET:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: OIDC_CLIENT_SECRET
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext: *securityContext
            resources: *resources

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }

    service:
      app:
        controller: gatus
        ports:
          http:
            port: *port

    serviceMonitor:
      app:
        serviceName: gatus
        endpoints:
          - port: http
            scheme: http
            path: /metrics
            interval: 1m
            scrapeTimeout: 10s

    route:
      app:
        hostnames: ["status.darkfellanetwork.com"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    serviceAccount:
      create: true
      name: gatus

    persistence:
      config:
        type: emptyDir
        advancedMounts:
          gatus:
            app:
              - path: /config
            init-config:
              - path: /config

      config-file:
        type: configMap
        name: gatus-configmap
        advancedMounts:
          gatus:
            app:
              - path: /config/config.yaml
                subPath: config.yaml
                readOnly: true

      postgres-ca:
        type: secret
        name: *secret
        advancedMounts:
          gatus:
            app:
              - path: /etc/ssl/certs/postgres-ca.crt
                subPath: ca.crt
                readOnly: true
