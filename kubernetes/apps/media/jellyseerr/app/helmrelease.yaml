---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyseerr
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: volsync
      namespace: volsync-system

  values:
    controllers:
      jellyseerr:
        annotations:
          reloader.stakater.com/auto: "true"

        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17.4@sha256:a9f405688344a8a6f718e2c344438342ad21540986aeb5ab5fa781831eb2c597
            env:
              INIT_POSTGRES_DBNAME: &dbName jellyseerr
              INIT_POSTGRES_HOST: &dbHost postgres-v17-rw.database.svc.cluster.local
              INIT_POSTGRES_USER:
                valueFrom:
                  secretKeyRef:
                    name: &secret jellyseerr-secret
                    key: &pgUser POSTGRES_USERNAME
              INIT_POSTGRES_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: &pgPass POSTGRES_PASSWORD
              INIT_POSTGRES_SUPER_USER: postgres-db-manager
              INIT_POSTGRES_SUPER_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: POSTGRES_SUPER_PASS
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }

        containers:
          app:
            image:
              repository: ghcr.io/d4rkfella/jellyseerr-distroless
              tag: rolling@sha256:75c2817ab9a187ba85f146fd4f325ff7ee6af135fbd12ee713f3e5f96efc6931
            env:
              TZ: Europe/Sofia
              LOG_LEVEL: "info"
              PORT: &port 80
              DB_TYPE: postgres
              DB_HOST: *dbHost
              DB_NAME: *dbName
              DB_USER:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: *pgUser
              DB_PASS:
                valueFrom:
                  secretKeyRef:
                    name: *secret
                    key: *pgPass
              DB_USE_SSL: "true"
              DB_SSL_CA_FILE: /etc/ssl/certs/postgres-ca.crt
              DB_LOG_QUERIES: "false"
              DB_SSL_REJECT_UNAUTHORIZED: "true"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/v1/status
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 10
            securityContext: *securityContext
            resources:
              requests:
                cpu: 10m
                memory: 512Mi
              limits:
                memory: 2Gi

    defaultPodOptions:
      hostAliases:
        - ip: "192.168.91.52"
          hostnames:
            - "radarr.darkfellanetwork.com"
            - "sonarr.darkfellanetwork.com"
        - ip: "192.168.91.54"
          hostnames:
            - "plex.darkfellanetwork.com"
      securityContext:
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
        fsGroup: 65532
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: jellyseerr
        ports:
          http:
            port: *port

    route:
      app:
        hostnames: ["requests.darkfellanetwork.com"]
        parentRefs:
          - name: external
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      config:
        existingClaim: *app
        advancedMounts:
          jellyseerr:
            app:
              - path: /usr/lib/Jellyseerr/config

      cache:
        enabled: true
        type: persistentVolumeClaim
        size: 20Gi
        accessMode: ReadWriteOnce
        storageClass: openebs-zfs-128k
        advancedMounts:
          jellyseerr:
            app:
              - path: /usr/lib/Jellyseerr/config/cache

      logs:
        type: emptyDir
        advancedMounts:
          jellyseerr:
            app:
              - path: /usr/lib/Jellyseerr/config/logs

      tmp:
        type: emptyDir
        advancedMounts:
          jellyseerr:
            app:
              - path: /tmp

      postgres-ca:
        type: secret
        name: *secret
        advancedMounts:
          jellyseerr:
            app:
              - path: /etc/ssl/certs/postgres-ca.crt
                subPath: ca.crt
                readOnly: true
