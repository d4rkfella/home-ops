# yaml-language-server: $schema=https://json.schemastore.org/helmfile

helmDefaults:
  cleanupOnFail: true
  wait: true
  waitForJobs: true

releases:
  - name: cilium
    namespace: kube-system
    atomic: true
    chart: oci://ghcr.io/d4rkfella/charts-mirror/cilium
    version: 1.18.2
    values: ['./values.yaml.gotmpl']
    hooks:
      - events: ["prepare"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAME: cilium
          RELEASE_NAMESPACE: kube-system
          CRD_FILE: "{{ requiredEnv 'BOOTSTRAP_DIR' }}/crds.yaml"
        showlogs: true
      - events: ["postsync"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAMESPACE: kube-system
          CRDS_TO_WAIT: "ciliuml2announcementpolicies.cilium.io,ciliumloadbalancerippools.cilium.io,kubevirts.kubevirt.io,cdis.cdi.kubevirt.io"
          MANIFESTS: "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/kube-system/cilium/manifests/networks.yaml"
        showlogs: true

  - name: coredns
    namespace: kube-system
    atomic: true
    chart: oci://ghcr.io/coredns/charts/coredns
    version: 1.44.3
    values: ['./values.yaml.gotmpl']
    needs: ['kube-system/cilium']

  - name: kubelet-csr-approver
    namespace: kube-system
    atomic: true
    chart: oci://ghcr.io/d4rkfella/charts-mirror/kubelet-csr-approver
    version: 1.2.11
    values: ['./values.yaml.gotmpl']
    needs: ['kube-system/coredns']

  - name: cert-manager
    namespace: cert-manager
    atomic: true
    chart: oci://ghcr.io/d4rkfella/charts-mirror/cert-manager
    version: v1.18.2
    values: ['./values.yaml.gotmpl']
    needs: ['kube-system/kubelet-csr-approver']
    hooks:
      - events: ["prepare"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAME: cert-manager
          RELEASE_NAMESPACE: cert-manager
        showlogs: true
      - events: ["postsync"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAMESPACE: cert-manager
          CRDS_TO_WAIT: "clusterissuers.cert-manager.io,certificates.cert-manager.io"
          MANIFESTS: "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/cert-manager/cert-manager/manifests/clusterissuer.yaml,{{ requiredEnv 'KUBERNETES_DIR' }}/apps/cert-manager/cert-manager/manifests/rbac.yaml"
          SOPS_FILE: "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/cert-manager/cert-manager/manifests/issuer.secret.sops.yaml"
        showlogs: true

  - name: external-secrets
    namespace: external-secrets
    atomic: true
    chart: oci://ghcr.io/external-secrets/charts/external-secrets
    version: 0.20.2
    values: ['./values.yaml.gotmpl']
    needs: ['vault/vault','cert-manager/cert-manager']
    hooks:
      - events: ["prepare"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAME: external-secrets
          RELEASE_NAMESPACE: external-secrets
        showlogs: true
      - events: ["postsync"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAMESPACE: external-secrets
          CRDS_TO_WAIT: "clustersecretstores.external-secrets.io"
          MANIFESTS: "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/external-secrets/external-secrets/manifests/clustersecretstore.yaml"
        showlogs: true

  - name: zfs-localpv
    namespace: openebs-system
    atomic: true
    chart: oci://ghcr.io/d4rkfella/charts-mirror/zfs-localpv
    version: 2.8.0
    values: ['./values.yaml.gotmpl']
    needs: ['kube-system/cilium','kube-system/coredns']
    hooks:
      - events: ["prepare"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAME: zfs-localpv
          RELEASE_NAMESPACE: openebs-system
        showlogs: true
      - events: ["presync"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAMESPACE: kube-system
          MANIFESTS: "{{ requiredEnv 'BOOTSTRAP_DIR' }}/create-zpool.yaml"
        showlogs: true
      - events: ["postsync"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAMESPACE: openebs-system
          MANIFESTS: "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/openebs-system/zfs-localpv/manifests/storageclass.yaml,{{ requiredEnv 'KUBERNETES_DIR' }}/apps/openebs-system/zfs-localpv/manifests/volumesnapshotclass.yaml"
        showlogs: true

  - name: vault
    namespace: vault
    atomic: true
    chart: oci://ghcr.io/d4rkfella/charts-mirror/vault
    version: 0.31.0
    values: ['./values.yaml.gotmpl']
    needs: ['cert-manager/cert-manager','openebs-system/zfs-localpv']
    hooks:
      - events: ["prepare"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAME: vault
          RELEASE_NAMESPACE: vault
          SOPS_FILE: "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/vault/vault/manifests/vault.secret.sops.yaml"
        showlogs: true
      - events: ["postsync"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAMESPACE: vault
          VAULT_ADDR: "https://vault.darkfellanetwork.com:8200"
          CRDS_TO_WAIT: ""
        showlogs: true

  - name: multus
    namespace: kube-system
    atomic: true
    chart: oci://ghcr.io/bjw-s-labs/helm/app-template
    version: 4.3.0
    values: ['./values.yaml.gotmpl']
    needs: ['kube-system/cilium','kube-system/coredns']
    hooks:
      - events: ["postsync"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAMESPACE: kube-system
          MANIFESTS: "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/kube-system/multus/manifests/rbac.yaml"
        showlogs: true
      - events: ["postsync"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAMESPACE: kubevirt
          MANIFESTS: "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/kubevirt/kubevirt-instance/manifests/kubevirt.yaml"
        showlogs: true
      - events: ["postsync"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAMESPACE: cdi
          MANIFESTS: "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/cdi/cdi-instance/manifests/cdi.yaml,{{ requiredEnv 'KUBERNETES_DIR' }}/apps/cdi/cdi-instance/manifests/storageprofile.yaml"
          CRDS_TO_WAIT: "storageprofiles.cdi.kubevirt.io,virtualmachines.kubevirt.io,datavolumes.cdi.kubevirt.io"
          SOPS_FILE: "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/virtualization/windows-server/manifests/sysprep.secret.sops.yaml"
          DEPLOYMENTS: "virt-operator,virt-controller,virt-api,cdi-uploadproxy,cdi-operator,cdi-deployment,cdi-apiserver"
          DAEMONSETS: "virt-handler"
        showlogs: true

  - name: envoy-gateway-controller
    namespace: envoy-gateway-system
    atomic: true
    chart: oci://docker.io/envoyproxy/gateway-helm
    version: 1.5.2
    needs: ['cert-manager/cert-manager','kube-system/cilium']
    hooks:
      - events: ["prepare"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAME: envoy-gateway-controller
          RELEASE_NAMESPACE: envoy-gateway-system
        showlogs: true

  - name: flux-operator
    namespace: flux-system
    atomic: true
    chart: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-operator
    version: 0.31.0
    values: ['./values.yaml.gotmpl']
    hooks:
      - events: ["prepare"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAME: flux-operator
          RELEASE_NAMESPACE: flux-system
        showlogs: true

  - name: flux-instance
    namespace: flux-system
    atomic: true
    chart: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-instance
    version: 0.31.0
    values: ['./values.yaml.gotmpl']
    needs: ['flux-system/flux-operator']
    hooks:
      - events: ["prepare"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAMESPACE: flux-system
          SOPS_FILE: "{{ requiredEnv 'KUBERNETES_DIR' }}/components/common/sops/secret.sops.yaml"
        showlogs: true
      - events: ["postsync"]
        command: python
        args: ["scripts/helm_hooks.py"]
        env:
          RELEASE_NAMESPACE: virtualization
          MANIFESTS: ""
        showlogs: true
