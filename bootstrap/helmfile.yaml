# yaml-language-server: $schema=https://json.schemastore.org/helmfile

helmDefaults:
  cleanupOnFail: true
  wait: true
  waitForJobs: true

releases:
  - name: cilium
    namespace: kube-system
    atomic: true
    chart: oci://ghcr.io/d4rkfella/charts-mirror/cilium
    version: 1.18.2
    values: ['./values.yaml.gotmpl']
    hooks:
      - events: ["prepare"]
        command: python
        args: ["scripts/helm_hooks.py", "namespace", "--name", "kube-system"]
        showlogs: true
      - events: ["prepare"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "crds"
          - "--names"
          - "ciliuml2announcementpolicies.cilium.io,ciliumloadbalancerippools.cilium.io,kubevirts.kubevirt.io,cdis.cdi.kubevirt.io"
        showlogs: true
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "manifest"
          - "--file"
          - "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/kube-system/cilium/manifests/networks.yaml"
          - "--namespace"
          - "kube-system"
        showlogs: true

  - name: coredns
    namespace: kube-system
    atomic: true
    chart: oci://ghcr.io/coredns/charts/coredns
    version: 1.44.3
    values: ['./values.yaml.gotmpl']
    needs: ['kube-system/cilium']

  - name: kubelet-csr-approver
    namespace: kube-system
    atomic: true
    chart: oci://ghcr.io/d4rkfella/charts-mirror/kubelet-csr-approver
    version: 1.2.11
    values: ['./values.yaml.gotmpl']
    needs: ['kube-system/coredns']

  - name: cert-manager
    namespace: cert-manager
    atomic: true
    chart: oci://ghcr.io/d4rkfella/charts-mirror/cert-manager
    version: v1.19.0
    values: ['./values.yaml.gotmpl']
    needs: ['kube-system/kubelet-csr-approver']
    hooks:
      - events: ["prepare"]
        command: python
        args: ["scripts/helm_hooks.py", "namespace", "--name", "cert-manager"]
        showlogs: true
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "crds"
          - "--names"
          - "clusterissuers.cert-manager.io,certificates.cert-manager.io"
        showlogs: true
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "manifest"
          - "--file"
          - "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/cert-manager/cert-manager/manifests/clusterissuer.yaml"
          - "--namespace"
          - "cert-manager"
        showlogs: true
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "manifest"
          - "--file"
          - "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/cert-manager/cert-manager/manifests/rbac.yaml"
          - "--namespace"
          - "cert-manager"
        showlogs: true
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "sops"
          - "--file"
          - "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/cert-manager/cert-manager/manifests/issuer.secret.sops.yaml"
          - "--namespace"
          - "cert-manager"
        showlogs: true

  - name: external-secrets
    namespace: external-secrets
    atomic: true
    chart: oci://ghcr.io/external-secrets/charts/external-secrets
    version: 0.20.2
    values: ['./values.yaml.gotmpl']
    needs: ['vault/vault','cert-manager/cert-manager']
    hooks:
      - events: ["prepare"]
        command: python
        args: ["scripts/helm_hooks.py", "namespace", "--name", "external-secrets"]
        showlogs: true
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "crds"
          - "--names"
          - "clustersecretstores.external-secrets.io"
        showlogs: true
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "manifest"
          - "--file"
          - "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/external-secrets/external-secrets/manifests/clustersecretstore.yaml"
          - "--namespace"
          - "external-secrets"
        showlogs: true

  - name: zfs-localpv
    namespace: openebs-system
    atomic: true
    chart: oci://ghcr.io/d4rkfella/charts-mirror/zfs-localpv
    version: 2.8.0
    values: ['./values.yaml.gotmpl']
    needs: ['kube-system/cilium','kube-system/coredns']
    hooks:
      - events: ["prepare"]
        command: python
        args: ["scripts/helm_hooks.py", "namespace", "--name", "openebs-system"]
        showlogs: true
      - events: ["presync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "manifest"
          - "--file"
          - "{{ requiredEnv 'BOOTSTRAP_DIR' }}/create-zpool.yaml"
          - "--namespace"
          - "kube-system"
        showlogs: true
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "manifest"
          - "--file"
          - "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/openebs-system/zfs-localpv/manifests/storageclass.yaml"
          - "--namespace"
          - "openebs-system"
        showlogs: true
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "manifest"
          - "--file"
          - "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/openebs-system/zfs-localpv/manifests/volumesnapshotclass.yaml"
          - "--namespace"
          - "openebs-system"
        showlogs: true

  - name: vault
    namespace: vault
    atomic: true
    chart: oci://ghcr.io/d4rkfella/charts-mirror/vault
    version: 0.31.0
    values: ['./values.yaml.gotmpl']
    needs: ['cert-manager/cert-manager','openebs-system/zfs-localpv']
    hooks:
      - events: ["prepare"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "sops"
          - "--file"
          - "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/vault/vault/manifests/vault.secret.sops.yaml"
          - "--namespace"
          - "vault"
        showlogs: true
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "vault"
          - "--addr"
          - "https://vault.darkfellanetwork.com:8200"
        showlogs: true

  - name: multus
    namespace: kube-system
    atomic: true
    chart: oci://bjw-s-labs/helm/app-template
    version: 4.3.0
    values: ['./values.yaml.gotmpl']
    needs: ['kube-system/cilium','kube-system/coredns']
    hooks:
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "manifest"
          - "--file"
          - "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/kube-system/multus/manifests/rbac.yaml"
          - "--namespace"
          - "kube-system"
        showlogs: true
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "manifest"
          - "--file"
          - "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/kubevirt/kubevirt-instance/manifests/kubevirt.yaml"
          - "--namespace"
          - "kubevirt"
        showlogs: true
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "manifest"
          - "--file"
          - "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/cdi/cdi-instance/manifests/cdi.yaml"
          - "--namespace"
          - "cdi"
        showlogs: true
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "manifest"
          - "--file"
          - "{{ requiredEnv 'KUBERNETES_DIR' }}/apps/cdi/cdi-instance/manifests/storageprofile.yaml"
          - "--namespace"
          - "cdi"
        showlogs: true
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "deployments"
          - "--namespace"
          - "virtualization"
          - "--names"
          - "virt-operator,virt-controller,virt-api,cdi-uploadproxy,cdi-operator,cdi-deployment,cdi-apiserver"
        showlogs: true
      - events: ["postsync"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "daemonsets"
          - "--namespace"
          - "virtualization"
          - "--names"
          - "virt-handler"
        showlogs: true

  - name: envoy-gateway-controller
    namespace: envoy-gateway-system
    atomic: true
    chart: oci://docker.io/envoyproxy/gateway-helm
    version: 1.5.3
    needs: ['cert-manager/cert-manager','kube-system/cilium']
    hooks:
      - events: ["prepare"]
        command: python
        args: ["scripts/helm_hooks.py", "namespace", "--name", "envoy-gateway-system"]
        showlogs: true

  - name: flux-operator
    namespace: flux-system
    atomic: true
    chart: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-operator
    version: 0.32.0
    values: ['./values.yaml.gotmpl']
    hooks:
      - events: ["prepare"]
        command: python
        args: ["scripts/helm_hooks.py", "namespace", "--name", "flux-system"]
        showlogs: true

  - name: flux-instance
    namespace: flux-system
    atomic: true
    chart: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-instance
    version: 0.32.0
    values: ['./values.yaml.gotmpl']
    needs: ['flux-system/flux-operator']
    hooks:
      - events: ["prepare"]
        command: python
        args:
          - "scripts/helm_hooks.py"
          - "sops"
          - "--file"
          - "{{ requiredEnv 'KUBERNETES_DIR' }}/components/common/sops/secret.sops.yaml"
          - "--namespace"
          - "flux-system"
        showlogs: true
